{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","query","selectedTodos","filterTodos","todos","select","toLowerCase","filteredTodos","filter","todo","title","includes","completed","this","props","getUserId","toggleChange","className","type","placeholder","onChange","event","setState","target","value","map","id","userId","key","ClassNames","checked","onClick","React","Component","url","getUsers","fetch","then","response","json","result","data","CurrentUser","user","clearUser","name","email","phone","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6232b5b2.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\n\nexport class TodoList extends React.Component {\n  state = {\n    query: '',\n    selectedTodos: '',\n  }\n\n  filterTodos = (todos, select) => {\n    const query = this.state.query.toLowerCase();\n    const filteredTodos = todos.filter(\n      todo => todo.title.toLowerCase().includes(query),\n    );\n\n    if (select === 'active') {\n      return filteredTodos.filter(todo => !todo.completed);\n    }\n\n    if (select === 'completed') {\n      return filteredTodos.filter(todo => todo.completed);\n    }\n\n    return filteredTodos;\n  }\n\n  render() {\n    const { todos, getUserId, toggleChange } = this.props;\n    const { selectedTodos } = this.state;\n    const filteredTodos = this.filterTodos(todos, selectedTodos);\n\n    return (\n      <div className=\"TodoList\">\n        <input\n          className=\"TodoList__search\"\n          type=\"text\"\n          placeholder=\"Search todo by title\"\n          onChange={event => (\n            this.setState({ query: event.target.value })\n          )}\n        />\n        <select\n          className=\"TodoList__select\"\n          value={selectedTodos}\n          onChange={event => (\n            this.setState({ selectedTodos: event.target.value })\n          )}\n        >\n          <option value=\"\">Select todos</option>\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n\n        <ul className=\"TodoList__list\">\n          {filteredTodos.map(({ id, title, completed, userId }) => (\n            <li\n              key={id}\n              className={ClassNames(\n                'TodoList__item',\n                {\n                  'TodoList__item--unchecked': !completed,\n                  'TodoList__item--checked': completed,\n                },\n              )}\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={completed}\n                  onChange={() => toggleChange(id)}\n                />\n                <p>{title}</p>\n              </label>\n\n              <button\n                type=\"button\"\n                className=\"TodoList__user-button\n                  TodoList__user-button--selected\n                  button\"\n                onClick={() => getUserId(userId)}\n              >\n                {`User# ${userId}`}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  getUserId: PropTypes.func.isRequired,\n  toggleChange: PropTypes.func.isRequired,\n};\n","const url = 'https://mate-api.herokuapp.com';\n\nexport function getAll() {\n  return fetch(`${url}/todos`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n\nexport function getUsers(userId) {\n  return fetch(`${url}/users/${userId}`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUsers } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    getUsers(this.props.userId).then((user) => {\n      this.setState({ user });\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.user.id === this.props.userId) {\n      return;\n    }\n\n    getUsers(this.props.userId).then((user) => {\n      this.setState({ user });\n    });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { userId, clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${userId}`}</span>\n        </h2>\n\n        <div>\n          <h3 className=\"CurrentUser__name\">{user.name}</h3>\n          <p className=\"CurrentUser__email\">{user.email}</p>\n          <p className=\"CurrentUser__phone\">{user.phone}</p>\n          <button\n            type=\"button\"\n            className=\"CurrentUser__clear\"\n            onClick={clearUser}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAll } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getAll().then((todos) => {\n      this.setState({\n        todos: todos.filter(todo => todo.title != null),\n      });\n    });\n  }\n\n  getUserId = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  toggleChange = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            getUserId={this.getUserId}\n            toggleChange={this.toggleChange}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}